name: CI

on:
  push:
    branches: [ master ]
    tags: "*.*.*"
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64]
        os: [ubuntu-latest]
        include:
          - arch: aarch64
            cpu: cortex-a53
            base_image: raspios_lite_arm64:latest
            cpu_info: raspberrypi_zero2_w_arm64_w

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2.3.4
    
    - uses: pguyot/arm-runner-action@v2
      with:
        base_image: ${{ matrix.base_image }}
        cpu: ${{ matrix.cpu }}
        cpu_info: ${{ matrix.cpu_info }}
        commands: |
            test `uname -m` = ${{ matrix.arch }}
            grep Model /proc/cpuinfo
            
    - name: Cache OCaml's opam
      uses: actions/cache@v2.1.5
      with:
        path: ~/.opam
        key: ${{matrix.os}}-rescript-vscode-v3

    - name: Use OCaml
      uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: 4.14.x

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - run: npm ci
    - run: opam install dune
    - run: npm run compile

    - name: Build and test
      run: opam exec -- make test
      working-directory: analysis

    - name: Compress files
      run: |
        cd analysis
        mkdir ${{matrix.artifact-folder}}
        mv rescript-editor-analysis.exe ${{matrix.artifact-folder}}
        tar -cvf binary.tar ${{matrix.artifact-folder}}

    - uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.os}}
        path: analysis/binary.tar
